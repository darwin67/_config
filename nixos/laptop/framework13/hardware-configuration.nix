# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  # Bootloader.
  boot.loader = {
    systemd-boot.enable = true;
    efi.canTouchEfiVariables = true;
  };

  boot.initrd.availableKernelModules =
    [ "xhci_pci" "thunderbolt" "nvme" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/9e949055-35ec-4432-aac6-e3b0ff1cb4bb";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-f0049e75-ee2f-4149-876a-a17fd49c0b7e".device =
    "/dev/disk/by-uuid/f0049e75-ee2f-4149-876a-a17fd49c0b7e";

  # LUKs
  boot.initrd.luks.devices."luks-fc048c3d-dff4-41f4-938f-ef1f24dec5fc".device =
    "/dev/disk/by-uuid/fc048c3d-dff4-41f4-938f-ef1f24dec5fc";
  networking.hostName = "framework";

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/17E5-B867";
    fsType = "vfat";
    options = [ "fmask=0022" "dmask=0022" ];
  };

  swapDevices =
    [{ device = "/dev/disk/by-uuid/f9a44502-3e85-4744-8597-c9e84df90a0b"; }];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp170s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode =
    lib.mkDefault config.hardware.enableRedistributableFirmware;
}
