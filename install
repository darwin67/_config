#!/bin/bash

# Set OS env if it doesn't exist
if [ -z "$OS" ]; then
    if [[ "$OSTYPE" == "linux-gnu" ]]; then
	export OS="Linux"
    elif [[ "$OSTYPE" == "darwin"* ]]; then
	export OS="Mac"
    fi
fi

##################################################################
# Usage
##################################################################

function usage() {
    echo "usage: ./install [config]"
    echo
    echo "config:"
    echo "    brew         - install brew (only OS X)"
    echo "    vim          - install neovim"
    echo "    zsh          - install zsh and change default to zsh"
    echo "    powerline    - install powerline fonts"
    echo "    tmux         - install tmux"
    echo "    link         - link all dotfiles to $HOME"
    echo
}

##################################################################
# Brew
##################################################################

function install_brew() {
     if [[ "$OS" == "Mac" ]]; then
        ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    else
        echo "Brew is only available for OS X"
        usage
    fi
}


##################################################################
# Vim
##################################################################

function install_vim() {
    if [ "$OS" = "Mac" ]; then
        brew install neovim/neovim/neovim
	echo 'Install python 3 and neovim in pip to in order for autocompletions to work'
    elif [ "$OS" = "Linux" ]; then
	sudo apt-get install software-properties-common
	sudo add-apt-repository ppa:neovim-ppa/unstable
	sudo apt-get update
	sudo apt-get install neovim
	echo 'Install python 3 and neovim in pip to in order for autocompletions to work'
    else
        Usage
    fi
}


##################################################################
# Zsh
##################################################################

function install_zsh() {
    local zsh_shell=''

    if [ "$OS" = "Mac" ]; then
        brew install zsh
	zsh_shell='/usr/local/bin/zsh'
    elif [ "$OS" = "Linux" ]; then
        sudo apt-get install zsh
	zsh_shell='/usr/bin/zsh'
    fi

    if grep zsh_shell /etc/shells > /dev/null; then
	echo zsh_shell >> /etc/shells
    fi

    chsh -s zsh_shell
}


##################################################################
# Powerline
##################################################################

function install_powerline_fonts() {
    mkdir -p ~/tmp && cd ~/tmp || exit
    git clone git@github.com:powerline/fonts.git
    fonts/install.sh

    echo "*************************************************************"
    echo "Please set font to 'Meslo LG S for Powerline'"
    echo "*************************************************************"

    echo "Adding path to .zshrc"
}


##################################################################
# Tmux
##################################################################

function install_tmux() {
    if [ "$OS" = "Mac" ]; then
        brew install tmux
    elif [ "$OS" = "Linux" ]; then
        sudo apt-get install tmux
    fi
}


##################################################################
# Link files to $HOME
##################################################################

function link_files() {
    # Link files
    CONFIG="$(pwd)"
    export CONFIG
    ln -sf "$CONFIG/.zshrc" "$HOME/.zshrc"
    ln -sf "$CONFIG/.sqliterc" "$HOME/.sqliterc"
    ln -sf "$CONFIG/.ctags" "$HOME/.ctags"
    ln -sf "$CONFIG/.railsrc" "$HOME/.railsrc"
    ln -sf "$CONFIG/.rspec" "$HOME/.rspec"
    ln -sf "$CONFIG/.vimrc" "$HOME/.vimrc"
    ln -sf "$CONFIG/.emacs" "$HOME/.emacs"
    ln -sf "$CONFIG/.irbrc" "$HOME/.irbrc"
    ln -sf "$CONFIG/.pryrc" "$HOME/.pryrc"
    ln -sf "$CONFIG/.gitconfig" "$HOME/.gitconfig"
    ln -sf "$CONFIG/.gitignore_global" "$HOME/.gitignore_global"
    ln -sf "$CONFIG/.rubocop.yml" "$HOME/.rubocop.yml"
    if [ "$OS" = "Mac" ]; then
        ln -sf "$CONFIG/.tmux-osx.conf" "$HOME/.tmux.conf"
    elif [ "$OS" = "Linux" ]; then
        ln -sf "$CONFIG/.tmux-linux.conf" "$HOME/.tmux.conf"
    fi

    if [[ -d "~/.config/nvim" ]]; then
        ln -sf ${CONFIG}/.vimrc ${HOME}/.config/nvim/init.vim
    fi
}


##################################################################
# Installation
##################################################################

if [ "$1" = "brew" ]; then # install brew
    install_brew

elif [ "$1" = "vim" ]; then # install vim
    install_vim

elif [ "$1" = "zsh" ]; then # install oh-my-zsh
    install_zsh

elif [ "$1" = "powerline" ]; then # install Powerline
    install_powerline_fonts

elif [ "$1" = "tmux" ]; then # install tmux
    install_tmux

elif [ "$1" = "link" ]; then # Link all dotfiles
    link_files

else
  Usage

fi
